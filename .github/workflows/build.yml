name: Build with Gradle and Automatic Versioning

on:
  pull_request:
  workflow_dispatch:
  push:

concurrency:
  group: ${{ github.head_ref || format('{0}-{1}', github.ref, github.run_number) }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and Release

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 10

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: temurin

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            **/loom-cache
            **/prebundled-jars
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Chmod Gradle
        run: chmod +x ./gradlew

      - name: Build
        run: ./gradlew build --no-daemon

      # Automatic Versioning and Release
      - name: Extract version and release type
        id: extract_version
        run: |
          # Assuming the commit description is in the format: "type version", e.g., "minor 1.1.0"
          RELEASE_TYPE=$(echo "$GITHUB_EVENT_INPUT_DESCRIPTION" | cut -d " " -f1)
          RELEASE_VERSION=$(echo "$GITHUB_EVENT_INPUT_DESCRIPTION" | cut -d " " -f2)
          echo "::set-output name=RELEASE_TYPE::$RELEASE_TYPE"
          echo "::set-output name=RELEASE_VERSION::$RELEASE_VERSION"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' # Only on push to main branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.extract_version.outputs.RELEASE_VERSION }}
          release_name: ${{ steps.extract_version.outputs.RELEASE_TYPE }} Update ${{ steps.extract_version.outputs.RELEASE_VERSION }}
          body: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false